#!/bin/bash
export LF_SCRIPT="$(readlink -f "$0")"
export LF_DIR="$(dirname "$LF_SCRIPT")"
export LF_USERDIR="$HOME/.lflab"
LF_TMPROOT="$(readlink -f /run/shm)"
[[ -d "$LF_TMPROOT" ]] || LF_TMPROOT="$(readlink -f /tmp)"
export LF_TMPROOT
export LF_IO="$LF_DIR/lf.io"
export LF_BIN="$LF_DIR/lf.bin"
export LF_GUI="$LF_DIR/lf.gui"
export LF_CON="$LF_DIR/lf.con"
export LF_BB="$LF_DIR/lf.bb"
export LF_HLP="$LF_DIR/help.txt"
export LF_LIC="$LF_DIR/COPYING"
export LF_LICB="$LF_DIR/lf.lic"
export LF_LOG="$LF_USERDIR/lf.log"
export LF_TLOG="$LF_USERDIR/lf.tlog"
export LF_TMPDIR="$LF_TMPROOT/lf.$$"
export LF_KILLER="$LF_TMPDIR/killer-file"
export LANG=C
LF_DEFLIB="$LF_DIR/ex.lf"
ulimit -c 262144

lf_ini=def
cond=y
export LF_INIFILE="$LF_USERDIR/lf.ini"
dbg=""
trc=""

LF_PKGINI="$LF_DIR/lf.ini"
LF_OLDDIR="$HOME/.lf"
LF_OLDINI="$HOME/.lf/lf.ini"
LF_OLDINI_FOUND=""

if [[ -f "$LF_INIFILE" ]]; then
	. "$LF_INIFILE"
elif [[ -f "$LF_OLDINI" ]] && grep -q LF_AU_TRY_N "$LF_OLDINI"; then
	LF_OLDINI_FOUND="y"
	. "$LF_OLDINI"
else
	. "$LF_PKGINI"
	export LF_HITHERE="y"
fi

while [[ -n "$cond" ]]; do
        case "$1" in
                "") cond="" ;;
		"-i")
		     source "$2"
		     shift 2;;
		"-d") dbg=y; shift;;
		"-D") export LF_DEBUGFLG="$2"; shift 2;;
		"-t") trc=y; shift;;
		"-fg") fg=y; shift;;
		"-n")  LF_DEFLIB=""; shift;;
                "-?"|"-h")
		     echo "usage: $0 <options> <lib>* <save_file>"
		     echo "   or  $0 <options> <lib>* / <save_file>*"
		     echo "(<lib>s will be read as a collection of read-only objects)"
		     echo "options: (x:integer arg. s:string arg. [default-value|current-value])"
		     echo "    -? or -h   this help"
		     echo "    -i <file>  include settings file"
		     echo "    -d         run with GDB"
		     echo "    -t         run with strace"
		     echo "    -n         skip default lib"
#=#=#=# here comes the generated part #=#=#=#

LF_LOGPEND=""
LF_UDIR_OK=""

if [[ -d "$LF_USERDIR" ]]; then
	LF_UDIR_OK="y";
elif [[ -n "$LF_OLDINI_FOUND" ]]; then
	LF_LOGPEND="found old user dir '$LF_OLDDIR', renaming to '$LF_USERDIR'..."
	if mv "$LF_OLDDIR" "$LF_USERDIR"; then LF_UDIR_OK="y"; else LF_LOGPEND="mv $LF_OLDDIR $LF_USERDIR failed, "; fi
fi
if [[ -z "$LF_UDIR_OK" ]]; then
	if mkdir -p "$LF_USERDIR"; then
		LF_LOGPEND="${LF_LOGPEND}user dir created: $LF_USERDIR"
	else
		LF_LOGPEND="${LF_LOGPEND}$LF_USERDIR create failed, defaulting to $HOME"
		LF_USERDIR="$HOME"
	fi
fi

[[ -f "$LF_LOG--2" ]] && mv "$LF_LOG--2" "$LF_LOG--3"
[[ -f "$LF_LOG--1" ]] && mv "$LF_LOG--1" "$LF_LOG--2"
[[ -f "$LF_LOG"    ]] && mv "$LF_LOG"    "$LF_LOG--1"
(echo "lflab start script - log start at $(date "+%F %T.%3N")"
 [[ -n "$LF_LOGPEND" ]] && echo "$LF_LOGPEND"
 mkdir -p "$LF_TMPDIR" 
 echo hahahaha > "$LF_KILLER"
 if [[ ! -f "$LF_INIFILE" ]]; then echo "copying ini file..."; cp "$LF_PKGINI" "$LF_INIFILE"; fi)  2>&1 | tee "$LF_LOG"
if ! grep -q ^LF_XTERM "$LF_INIFILE"; then
	if [[ -z "$LF_XTERM" ]]; then
		LF_XTERM="(no terminal found)";
		for term in x-terminal-emulator xterm rxvt gnome-terminal konsole lxterminal terminator; do
			if [[ -x $(which $term) ]]; then LF_XTERM=$term; break; fi;
		done
		echo "$LF_XTERM"
	fi
	echo "terminal: $LF_XTERM" | tee -a "$LF_LOG"
	echo "LF_XTERM=\"$LF_XTERM\"" >> "$LF_INIFILE"
fi

if [[ -z "$LF_GUI_CFG" ]]; then
	export LF_GTKRC="$LF_DIR/lf.gtk.rc.def"
else
	export LF_GTKRC="$LF_DIR/lf.gtk.rc.$LF_GUI_CFG"
fi
	
if [[ -n "$dbg" ]]; then
	gdb --args "$LF_BIN" "$LF_DEFLIB" $*
elif [[ -n "$trc" ]]; then
	strace "-o$LF_USERDIR/lf.trc" "$LF_BIN" "$LF_DEFLIB" $* 
else
	if [[ -z "$*" ]]; then
		exec "$LF_BIN" "$LF_DEFLIB" /
	else 
		exec "$LF_BIN" "$LF_DEFLIB" $*
	fi
fi
